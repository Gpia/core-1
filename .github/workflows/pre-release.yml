name: Next Release Flow

on:
  ## Just for testing
  workflow_dispatch:
  issue:
    types: [ opened ]


jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    # 如果是 OWNER 或 MEMBER 创建 issue 或, 则执行
    if: |
      github.event_name == 'issue_comment' &&
      (github.event.comment.author_association == 'OWNER') &&
      startsWith(github.event.comment.body, '## OpenSumi next version prerelease')

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: |
        npm i

    - name: Set Current Version
      run: |
        CURRENT_VERSION=$(node -p 'require("./lerna.json").version')
        echo "CURRENT_VERSION=${CURRENT_VERSION}" >> $GITHUB_ENV

    - name: Tag Check
      id: tag_check
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        GET_API_URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/git/ref/tags/v${CURRENT_VERSION}"
        http_status_code=$(curl -LI $GET_API_URL -o /dev/null -w '%{http_code}\n' -s \
          -H "Authorization: token ${GITHUB_TOKEN}")
        if [ "$http_status_code" -ne "404" ] ; then
          echo "::set-output name=exists_tag::true"
        else
          echo "::set-output name=exists_tag::false"
        fi

    # Lerna Version lerna version --ignore-changes 'tools/**' --no-push prepatch
    - name: Build
      run: |
        npm run build:all
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
